/*
 *
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 *
 */

/* Reset */


p {
    text-wrap: pretty;
}

h1, h2, h3, h4, h5, h6 {
    font-weight: bold;
    text-wrap: balance;
    line-height: 1.3;
}

/* Prevent long words from distorting layouts */
p, h1, h2, h3, h4, h5, h6 {
    overflow-wrap: break-word;
}

main *:not(:is(li)) + *:not(:is(li)) {
    margin-block-start: 1rem;
}

img, picture, video, canvas, svg {
    display: block;
    max-width: 100%;
}

input, button, textarea, select {
    font: inherit;
}

/* A elements that don't have a class get default styles */
a:not([class]) {
    color: currentColor;
    text-decoration: inherit;
}

hr {
    border: 0;
    border-top: 0.1rem solid var(--line-color);
}

code, pre {
    background-color: var(--code-background-color);
}

pre {
    padding: 1rem;
    overflow-y: auto;
}

/* Variables */

:root {
    /* Colors */
    --body-background-color: hsl(0, 0%, 100%);
    --code-background-color: hsl(0, 0%, 97%);
    --text-color: hsl(0, 0%, 20%);
    --disabled-text-color: hsl(0, 0%, 40%);
    --line-color: hsl(0, 0%, 80%);
    --link-color: #306b8f;
    /* Sizes */
    /* --page-width: 1100px; */
}

/* Structure */

body {
    display: grid;
    grid-template-rows: auto 1fr auto;
    grid-template-columns: minmax(2em, 1fr) calc(var(--page-width, 1100px) * 0.7) calc(var(--page-width, 1100px) * 0.3) minmax(2em, 1fr);
    grid-template-areas:
        "header header header header"
        ". main aside ."
        "footer footer footer footer";
    color: var(--text-color);
    background-color: var(--body-background-color);
    font-family: var(--body-font-family);
    /* line-height: var(--body-line-height); */
}

header {
    grid-area: header;
    align-self: start; /* Important for sticky positioning */
    position: sticky;
    top: 0;
    z-index: 1;
    flex-direction: row;
    align-items: center;
    background-color: var(--body-background-color);
    border-bottom: 0.1rem solid var(--line-color);
    padding: 1rem 1rem 0.9rem 1rem;
}

header > a {
    flex: 0 0 calc(max(1rem, (100% - var(--page-width, 1100px)) / 2)) ;
}

header > div {
    flex-direction: row;
    justify-content: space-between;
    align-items: center;
    flex: 1;
    padding-left: 1rem;
}

main {
    grid-area: main;
    padding: 2rem 1rem;
}

aside {
    grid-area: aside;
    display: flex;
    flex-direction: column;
    align-self: start; /* Important for sticky positioning */
    position: sticky;
    top: 7.5em;
    margin-left: 1rem;
    padding-right: 1rem;
    padding-left: 2rem;
    border-left: 0.1rem solid var(--line-color);
}

footer {
    grid-area: footer;
    display: flex;
    justify-content: center;
    border-top: 0.1rem solid var(--line-color);
}

footer > div {
    padding: 1rem;
    width: var(--page-width, 1100px);
}

/* .path-nav */

.path-nav {
    display: inline;
}

.path-nav > a:not(:last-child):after {
    content: " \00a0\003e\00a0\00a0 ";
}
