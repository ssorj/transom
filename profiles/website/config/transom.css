/*
 *
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 *
 */

@layer base, components, layout;

@layer base {
    :where(*, *::before, *::after) {
        box-sizing: border-box;
        margin: 0;
    }

    :where(html) {
        /* Prevent font size inflation */
        -moz-text-size-adjust: none;
        -webkit-text-size-adjust: none;
        text-size-adjust: none;
        /* Avoid layout jumps from disappearing scroll bars */
        overflow-y: scroll;
    }

    :where(body) {
        min-height: 100vh;
        line-height: 1.66;
        color: var(--text-color, hsl(0, 0%, 20%));
        background-color: var(--body-background-color, white);
    }

    /* Use flex for prose containers */
    :where(main, article, section, nav, aside, form, fieldset, figure) {
        display: flex;
        flex-direction: column;
        gap: 1rem;
    }

    /* Prevent long words from distorting layouts */
    :where(p, h1, h2, h3, h4, h5, h6) {
        overflow-wrap: break-word;
    }

    :where(p) {
        text-wrap: pretty;
    }

    :where(h1, h2, h3, h4, h5, h6) {
        text-wrap: balance;
        line-height: 1.3;
    }

    :where(h1) {
        font-size: 1.45rem;
    }

    :where(h2) {
        font-size: 1.2rem;
    }

    :where(h3) {
        font-size: 1rem;
    }

    :where(h4) {
        font-size: 0.9rem;
    }

    :where(a), :where(a:visited) {
        color: var(--link-color, royalblue);
        text-decoration: inherit;
    }

    :where(img, canvas, picture, svg, video) {
        display: block;
        max-width: 100%;
    }

    :where(input, button, textarea, select) {
        font: inherit;
    }

    :where(hr) {
        border: 0;
        border-top: 0.1rem solid var(--line-color, lightgray);
    }

    :where(code, pre) {
        background-color: var(--code-background-color, whitesmoke);
    }

    :where(code) {
        padding: 0 0.1rem;
    }

    :where(pre) {
        padding: 0.9rem 1rem;
        overflow-y: auto;
    }

    :where(pre > code) {
        padding: 0;
    }

    :where(ul, ol, dd) {
        padding-left: 1rem;
    }
}

@layer components {
    :where(nav.page-path) {
        display: inline;
        flex-direction: row;
    }

    :where(nav.page-path > a:not(:last-child))::after {
        content: " \00a0\003e\00a0\00a0 ";
    }

    :where(nav.page-toc) {
        gap: 1rem;
    }

    :where(nav.page-toc) > a {
        color: inherit;
        text-wrap: balance;
    }

    :where(nav.page-toc) > a.selected {
        text-decoration: underline;
    }
}

@layer layout {
    :where(html) {
        scroll-padding-top: 6rem;
    }

    :where(body) {
        display: grid;
        grid-template-rows: auto 1fr auto;
        grid-template-columns:
            minmax(2em, 1fr)
            calc(var(--page-width, 1100px) * 0.7)
            calc(var(--page-width, 1100px) * 0.3)
            minmax(2em, 1fr);
        grid-template-areas:
            "header header header header"
            ". main aside ."
            "footer footer footer footer";
    }

    :where(header) {
        grid-area: header;
        align-self: start; /* Important for sticky positioning */
        position: sticky;
        top: 0;
        z-index: 1;
        display: flex;
        align-items: center;
        justify-content: space-between;
        padding: 1rem;
        border-bottom: 0.1rem solid var(--line-color, lightgray);
        background-color: var(--body-background-color, white);
    }

    :where(footer) {
        grid-area: footer;
        display: flex;
        align-items: center;
        justify-content: space-between;
        padding: 1rem;
        border-top: 0.1rem solid var(--line-color, lightgray);
        background-color: var(--body-background-color, white);
    }

    :where(:is(header, footer) a) {
        color: inherit;
        text-decoration: inherit;
    }

    :where(:is(header, footer) > div:nth-child(1)) {
        flex: 0 1 calc((100% - (var(--page-width, 1100px))) / 2);
    }

    :where(:is(header, footer) > div:nth-child(2)) {
        flex: 0 1 var(--page-width, 1100px);
        padding: 0 1rem;
    }

    :where(:is(header, footer) > div:nth-child(3)) {
        flex: 0 1 calc((100% - (var(--page-width, 1100px))) / 2);
    }

    :where(main) {
        grid-area: main;
        padding: 2rem 1rem;
    }

    :where(aside) {
        grid-area: aside;
        align-self: start; /* Important for sticky positioning */
        position: sticky;
        top: 6rem;
        padding: 0 2rem 0 1rem;
        border-left: 0.1rem solid var(--line-color, lightgray);
        margin-left: 1rem;
    }
}
