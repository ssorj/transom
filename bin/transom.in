#!/usr/bin/env python
#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
# 
#   http://www.apache.org/licenses/LICENSE-2.0
# 
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#

from __future__ import print_function

import os
import sys

from argparse import ArgumentParser

default = os.path.normpath("@transom_home@")
home_dir = os.environ.get("TRANSOM_HOME", default)

sys.path.append(os.path.join(home_dir, "python"))

from transom import *

def main():
    description = "Transom renders website content from markdown source files"
    parser = ArgumentParser(description=description)

    parser.add_argument("input_dir", metavar="INPUT-DIR",
                        help="Read source files from INPUT-DIR")
    parser.add_argument("output_dir", metavar="OUTPUT-DIR",
                        help="Render output files to OUTPUT-DIR")
    parser.add_argument("--site-url", metavar="URL",
                        help="Prefix site links with URL")
    parser.add_argument("--check-links", metavar="MODE", default="none",
                        choices=["none", "internal", "external", "all"],
                        help="Validate HTML links (none [default], "
                        "internal, external, or all)")
    parser.add_argument("--check-output-files", action="store_true",
                        help="Check for missing or extra files")
    parser.add_argument("--verbose", action="store_true",
                        help="Enable logging")

    args = parser.parse_args()

    site_url = args.site_url

    if site_url is None:
        site_url = os.path.abspath(args.output_dir)

    transom = Transom(site_url, args.input_dir, args.output_dir)
    transom.home_dir = home_dir
    transom.verbose = args.verbose

    transom.init()
    transom.render()

    if args.check_links == "internal":
        transom.check_links(internal=True)

    if args.check_links == "external":
        transom.check_links(external=True)

    if args.check_links == "all":
        transom.check_links(internal=True, external=True)

    if args.check_output_files:
        transom.check_output_files()
        
if __name__ == "__main__":
    try:
        main()
    except KeyboardInterrupt:
        pass
