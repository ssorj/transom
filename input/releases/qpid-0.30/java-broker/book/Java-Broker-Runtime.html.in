<div class="docbook"><div class="navheader"><table summary="Navigation header" width="100%"><tr><th align="center" colspan="3">Chapter&#160;12.&#160;Runtime</th></tr><tr><td align="left" width="20%"><a accesskey="p" href="Java-Broker-Security-SSL.html">Prev</a>&#160;</td><th align="center" width="60%">&#160;</th><td align="right" width="20%">&#160;<a accesskey="n" href="Java-Broker-Runtime-Disk-Space-Management.html">Next</a></td></tr></table><hr /></div><div class="chapter"><div class="titlepage"><div><div><h1 class="title"><a id="Java-Broker-Runtime"></a>Chapter&#160;12.&#160;Runtime</h1></div></div></div><div class="toc"><p><strong>Table of Contents</strong></p><dl class="toc"><dt><span class="section"><a href="Java-Broker-Runtime.html#Java-Broker-Runtime-Log-Files">12.1. Log Files</a></span></dt><dd><dl><dt><span class="section"><a href="Java-Broker-Runtime.html#Java-Broker-Runtime-Log-Files-Enable-Debug">12.1.1. Enabling Debug</a></span></dt></dl></dd><dt><span class="section"><a href="Java-Broker-Runtime-Disk-Space-Management.html">12.2. Disk Space Management</a></span></dt><dd><dl><dt><span class="section"><a href="Java-Broker-Runtime-Disk-Space-Management.html#Qpid-Producer-Flow-Control">12.2.1. Producer Flow Control</a></span></dt></dl></dd><dt><span class="section"><a href="Java-Broker-Runtime-Producer-Transaction-Timeout.html">12.3. Producer Transaction Timeout</a></span></dt><dd><dl><dt><span class="section"><a href="Java-Broker-Runtime-Producer-Transaction-Timeout.html#Java-Broker-Runtime-Producer-Transaction-Timeout-GeneralInformation">12.3.1. General Information</a></span></dt><dt><span class="section"><a href="Java-Broker-Runtime-Producer-Transaction-Timeout.html#Java-Broker-Runtime-Producer-Transaction-Timeout-Purpose">12.3.2. Purpose</a></span></dt><dt><span class="section"><a href="Java-Broker-Runtime-Producer-Transaction-Timeout.html#Java-Broker-Runtime-Producer-Transaction-Timeout-Scope">12.3.3. Scope</a></span></dt><dt><span class="section"><a href="Java-Broker-Runtime-Producer-Transaction-Timeout.html#Java-Broker-Runtime-Producer-Transaction-Timeout-Effect">12.3.4. Effect</a></span></dt><dt><span class="section"><a href="Java-Broker-Runtime-Producer-Transaction-Timeout.html#Java-Broker-Runtime-Producer-Transaction-Timeout-Configuration">12.3.5. Configuration</a></span></dt></dl></dd><dt><span class="section"><a href="Java-Broker-Runtime-Handling-Undeliverable-Messages.html">12.4. Handing Undeliverable Messages</a></span></dt><dd><dl><dt><span class="section"><a href="Java-Broker-Runtime-Handling-Undeliverable-Messages.html#Java-Broker-Runtime-Handling-Undeliverable-Messages-Introduction">12.4.1. Introduction</a></span></dt><dt><span class="section"><a href="Java-Broker-Runtime-Handling-Undeliverable-Messages.html#Java-Broker-Runtime-Handling-Undeliverable-Messages-Maximum-Delivery-Count">12.4.2. Maximum Delivery Count</a></span></dt><dt><span class="section"><a href="Java-Broker-Runtime-Handling-Undeliverable-Messages.html#Java-Broker-Runtime-Handling-Undeliverable-Messages-Dead-Letter-Queues">12.4.3. Dead Letter Queues (DLQ)</a></span></dt><dt><span class="section"><a href="Java-Broker-Runtime-Handling-Undeliverable-Messages.html#Java-Broker-Runtime-Handling-Undeliverable-Messages-Configuration">12.4.4. Configuration</a></span></dt></dl></dd><dt><span class="section"><a href="Java-Broker-Close-Connection-When-No-Route.html">12.5. Closing client connections on unroutable mandatory messages</a></span></dt><dd><dl><dt><span class="section"><a href="Java-Broker-Close-Connection-When-No-Route.html#Java-Broker-Close-Connection-When-No-Route-Summary">12.5.1. Summary</a></span></dt><dt><span class="section"><a href="Java-Broker-Close-Connection-When-No-Route.html#Java-Broker-Close-Connection-When-No-Route-Configuration">12.5.2. Configuring <span class="emphasis"><em>closeWhenNoRoute</em></span></a></span></dt></dl></dd></dl></div><div class="section"><div class="titlepage"><div><div><h2 class="title"><a id="Java-Broker-Runtime-Log-Files"></a>12.1.&#160;Log Files</h2></div></div></div><p> The Broker uses the <a class="ulink" href="" target="_top">Apache Log4J</a>
  Logging Framework for all logging activity. </p><p> In the Broker's shipped configuration, all logging is directed to log file <code class="literal"><a class="link" href="Java-Broker-Appendix-Environment-Variables.html#Java-Broker-Appendix-Environment-Variables-Qpid-Work">${QPID_WORK}</a>/log/qpid.log</code>. The log file is not rotated and will be overwritten
  when the Broker restarts. Logging levels are configured in such a way that the log will comprise
  of:</p><div class="itemizedlist"><ul class="itemizedlist" type="disc"><li class="listitem"><p>Opertional Log Events. These report key events in the lifecycle of objects (Broker
    start-up, Queue creation, Queue deletion etc) within the Broker. See <a class="xref" href="Java-Broker-Appendix-Operation-Logging.html" title="Appendix&#160;C.&#160;Operational Logging">Appendix&#160;C, <em>Operational Logging</em></a> for details of the formation of these
    messages.</p></li><li class="listitem"><p>Queue Alert Events. These report when the queue thresholds have been breached. See <a class="xref" href="Java-Broker-Appendix-Queue-Alerts.html" title="Appendix&#160;D.&#160;Queue Alerts">Appendix&#160;D, <em>Queue Alerts</em></a> for details.</p></li><li class="listitem"><p>Any Error and Warning conditions.</p></li></ul></div><p>Logging can be reconfigured either by changing the logging configuration file <code class="literal"><a class="link" href="Java-Broker-Appendix-Environment-Variables.html#Java-Broker-Appendix-Environment-Variables-Qpid-Home">${QPID_HOME}</a>/etc/log4j.xml</code> or at runtime using the Logging Management MBean,
  see <a class="xref" href="Java-Broker-Configuring-And-Managing-JMX-Management.html#Java-Broker-Configuring-And-Managing-JMX-Management-MBeans" title="5.3.5.&#160;The MBeans">Section&#160;5.3.5, &#8220;The MBeans&#8221;</a> for
  details.</p><div class="section"><div class="titlepage"><div><div><h3 class="title"><a id="Java-Broker-Runtime-Log-Files-Enable-Debug"></a>12.1.1.&#160;Enabling Debug</h3></div></div></div><p>It can be helpful to enable debug within the Broker in order to understand a problem more
   clearly. If this is required, debug can be enabled at runtime (without restarting the Broker)
   using the Logging Management MBean. The change can also be made by changing the log configuration
   file and restarting the Broker. Whichever mechanism is chosen, change the appender assoicated
   with <code class="literal">org.apache.qpid</code> from <code class="literal">WARN</code> to
   <code class="literal">DEBUG</code>.</p><div class="example"><a id="idm140304441514544"></a><p class="title"><strong>Example&#160;12.1.&#160;Changing the log4j.xml configuration file to enable debug</strong></p><div class="example-contents"><pre class="screen">
...
&lt;logger additivity="true" name="org.apache.qpid"&gt;
    &lt;level value="debug"/&gt; &lt;!-- change the level value from warn to debug --&gt;
&lt;/logger&gt;
...</pre></div></div><br class="example-break" /><div class="important" style="margin-left: 0.5in; margin-right: 0.5in;"><h3 class="title">Important</h3><p>Running a production system at <code class="literal">DEBUG</code> level can have performance
    implications by slowing the Broker down. It can also generate large log files. Take care to
    revert the logging level back to <code class="literal">WARN</code> after the analysis is performed.</p></div></div></div></div><div class="navfooter"><hr /><table summary="Navigation footer" width="100%"><tr><td align="left" width="40%"><a accesskey="p" href="Java-Broker-Security-SSL.html">Prev</a>&#160;</td><td align="center" width="20%">&#160;</td><td align="right" width="40%">&#160;<a accesskey="n" href="Java-Broker-Runtime-Disk-Space-Management.html">Next</a></td></tr><tr><td align="left" valign="top" width="40%">11.4.&#160;SSL&#160;</td><td align="center" width="20%"><a accesskey="h" href="index.html">Home</a></td><td align="right" valign="top" width="40%">&#160;12.2.&#160;Disk Space Management</td></tr></table></div></div>